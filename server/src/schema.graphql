# import * from "./generated/graphql-schema/prisma.graphql"
scalar DateTime

type Query {
  me: User!
  dates: [Date]
  sittes: [Sitte]
  sitte(where: SitteWhereUniqueInput!): Sitte
}

type Mutation {
  signup(
    email: String!
    password: String!
    firstName: String
    lastName: String
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  logout: Boolean!
  createSubscription(source: String!, ccLast4: String!): User,
  cancelSubscription: User
  changeCreditCard(source: String!, ccLast4: String!): User
  createSitte(
    firstName: String!
    lastName: String!
    birthday: DateTime
    rateAmount: Float!
    rateType: RateType!
    gender: Gender!
  ): Sittee
  createDate(data: DateCreateInput!): Date!
  createOrUpdateDate(
    dateId: ID
    dateObjectId: String!
    childId: String!
    month: Float!
    day: Float!
    year: Float!
    hours: Float!
    dayOfWeek: String!
    notes: String
    paid: String
    isFixedRate: Boolean
  ): DateTime
  updateSitte(data: SitteUpdateInput!, where: SitteWhereUniqueInput!): Sitte
  deleteSitte(where: SitteWhereUniqueInput!): Sitte
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  firstName: String
  lastName: String
  sittes: [Sitte!]!
  type: AccountType!
}

type Sittee {
  id: ID!
  firstName: String
  lastName: String
}

input DateWhereInput {
  owner: SitteWhereInput
}

input SitteWhereInput {
  id: ID
}
